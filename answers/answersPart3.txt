### Part 3: Joins and Groups
* What is each pokemon's primary type?
mysql> SELECT pokemons.name, types.name FROM pokemons JOIN types ON pokemons.primary_type = types.id;

* What is Rufflet's secondary type?
mysql> SELECT x.name, y.name FROM pokemons AS x JOIN types AS y ON x.secondary_type = y.id WHERE x.name = "Rufflet";
+---------+--------+
| name    | name   |
+---------+--------+
| Rufflet | Flying |
+---------+--------+

* What are the names of the pokemon that belong to the trainer with trainerID 303?
mysql> SELECT pt.trainerID, pt.pokemon_id, x.name FROM pokemon_trainer AS pt JOIN pokemons
AS x ON pt.pokemon_id = x.id WHERE trainerID = 303;
+-----------+------------+-----------+
| trainerID | pokemon_id | name      |
+-----------+------------+-----------+
|       303 |          2 | Wailord   |
|       303 |          3 | Vileplume |
+-----------+------------+-----------+

* How many pokemon have a secondary type `Poison`
mysql> SELECT pokemons.name, types.name FROM pokemons JOIN types ON pokemons.secondary_type = types.id where types.name = "Poison";
+------------+--------+
| name       | name   |
+------------+--------+
| Vileplume  | Poison |
| Weepinbell | Poison |
| Gloom      | Poison |
| Ivysaur    | Poison |
| Tentacruel | Poison |
| Bellsprout | Poison |
| Victreebel | Poison |
| Bulbasaur  | Poison |
| Venusaur   | Poison |
| Roselia    | Poison |
| Oddish     | Poison |
| Gastly     | Poison |
| Haunter    | Poison |
| Gengar     | Poison |
| Beedrill   | Poison |
| Roserade   | Poison |
| Scolipede  | Poison |
| Venonat    | Poison |
| Dustox     | Poison |
| Ariados    | Poison |
| Qwilfish   | Poison |
| Budew      | Poison |
| Tentacool  | Poison |
| Venomoth   | Poison |
| Weedle     | Poison |
| Kakuna     | Poison |
| Spinarak   | Poison |
| Whirlipede | Poison |
| Venipede   | Poison |
| Amoonguss  | Poison |
| Foongus    | Poison |
+------------+--------+

* What are all the primary types and how many pokemon have that type?
mysql> SELECT COUNT(*), p.primary_type, t.name FROM pokemons AS p JOIN types AS t ON p.primary_type = t.id GROUP BY primary_type, t.name ORDER BY primary_type DESC;
+----------+--------------+----------+
| COUNT(*) | primary_type | name     |
+----------+--------------+----------+
|        1 |           18 | Flying   |
|       22 |           17 | Ice      |
|       14 |           16 | Fairy    |
|       19 |           15 | Ghost    |
|       38 |           14 | Psychic  |
|       25 |           13 | Fighting |
|       24 |           12 | Dark     |
|       19 |           11 | Steel    |
|       22 |           10 | Dragon   |
|       35 |            9 | Electric |
|       61 |            8 | Bug      |
|       27 |            7 | Poison   |
|       29 |            6 | Ground   |
|       38 |            5 | Fire     |
|       38 |            4 | Rock     |
|       59 |            3 | Grass    |
|       95 |            2 | Water    |
|       90 |            1 | Normal   |
+----------+--------------+----------+

* How many pokemon at level 100 does each trainer with at least one level 100 pokemone have? (Hint: your query should not display a trainer
mysql> SELECT COUNT(*) FROM pokemon_trainer AS pt JOIN pokemons AS x ON pt.pokemon_id = x.id WHERE pokelevel = 100;
+----------+
| COUNT(*) |
+----------+
|      963 |
+----------+

* How many pokemon only belong to one trainer and no other?
mysql> SELECT pokemon_id, COUNT(pokemon_id) FROM pokemon_trainer AS pt GROUP BY pokemon_id HAVING COUNT(pokemon_id) = 1;
+------------+-------------------+
| pokemon_id | COUNT(pokemon_id) |
+------------+-------------------+
|        592 |                 1 |
|        593 |                 1 |
|        606 |                 1 |
|        644 |                 1 |
|        646 |                 1 |
|        647 |                 1 |
|        649 |                 1 |
|        650 |                 1 |
|        651 |                 1 |
|        652 |                 1 |
|        653 |                 1 |
|        655 |                 1 |
|        656 |                 1 |
+------------+-------------------+
13 rows in set (0.05 sec)
